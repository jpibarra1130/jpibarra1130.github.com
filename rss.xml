<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Paolo Ibarra's Blog</title>
        <description>Paolo Ibarra's Blog - Juan Paolo Ibarra</description>
        <link>http://paoloibarra.com</link>
        <link>http://paoloibarra.com</link>
        <lastBuildDate>2014-12-30T18:39:13+08:00</lastBuildDate>
        <pubDate>2014-12-30T18:39:13+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>Working with Multiple Storyboard in a UITabBarController using Swift</title>
                <description>&lt;p&gt;I am still working with my two friends on an iOS app. Now that the application is starting to get bigger, we realized that working with one main storyboard is not sustainable. We decided to separate the features into several storyboards. Our development became more manageable after doing this.&lt;/p&gt;

&lt;p&gt;Our application is using a UITabBarController. We separated each tab to a storyboard and linked these back into the UITabBarController. We are using Swift as the main language for development.&lt;/p&gt;

&lt;p&gt;To make this setup work, I had to create a main UITabBarController where I added the storyboards. The UITabBarController implementation looks something like this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class MainTabBarController: UITabBarController {

    override func viewDidLoad() {
        super.viewDidLoad()

        var firstStoryboard:UIStoryboard = UIStoryboard(name: &quot;FirstStoryboard&quot;, bundle: nil)
        var firstViewController:UIViewController = firstStoryboard.instantiateViewControllerWithIdentifier
          (&quot;FirstViewNavigation&quot;) as UIViewController

        var secondStoryboard:UIStoryboard = UIStoryboard(name: &quot;SecondStoryboard&quot;, bundle: nil)
        var secondViewController:UIViewController = secondStoryboard.instantiateViewControllerWithIdentifier
          (&quot;SecondViewNavigation&quot;) as UIViewController

        self.viewControllers = [firstViewController, secondViewController]
    }

    ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I had to update the AppDelegate to extend from UITabBarControllerDelegate. Also, I needed to instantiate the UITabBarController I created above and make it the root view controller. The AppDelegate would look something like below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate, UITabBarControllerDelegate {

    var window: UIWindow?

    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions:
      [NSObject: AnyObject]?) -&amp;gt; Bool {
        // Override point for customization after application launch.

        self.window!.rootViewController = MainTabBarController();
        self.window!.makeKeyAndVisible()

        return true
    }

    ...
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After doing this, our app is now using multiple storyboards linked to the UITabBarController. It took me a bit of time to get it working as I found it hard to find resources on the internet which did something similar. I hope this helps someone out there looking to make something similar work with Swift, and iOS 8.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/12/29/Working-With-Multiple-Storyboards-UITabBarController-Swift</link>
                <guid>http://paoloibarra.com/2014/12/29/Working-With-Multiple-Storyboards-UITabBarController-Swift</guid>
                <pubDate>2014-12-29T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Using Swift to Immediately Update UICollectionView with API Result</title>
                <description>&lt;p&gt;I was puzzled a few days ago when the UICollectionView I was looking at didn’t automatically get updated even after calling &lt;code&gt;reloadData()&lt;/code&gt;. After much googling, I found this post in &lt;a href=&quot;http://stackoverflow.com/questions/14804359/uicollectionview-doesnt-update-immediately-when-calling-reloaddata-but-randoml&quot;&gt;stackoverflow&lt;/a&gt; which explained what caused it.&lt;/p&gt;

&lt;p&gt;It wasn’t because my API was slow nor was it because of some Swift issue I wasn’t aware of. It was because the task was added in a background queue. To fix this, you just need to make sure that the block you want to get updated immediately was running on the main thread.&lt;/p&gt;

&lt;p&gt;This was resolved by wrapping &lt;code&gt;reloadData()&lt;/code&gt; in a dispatch_async with the queue for the main thread passed as the argument. We can retrieve the main thread queue through &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Performance/Reference/GCD_libdispatch_Ref/index.html#//apple_ref/doc/uid/TP40008079-CH2-SW11&quot;&gt;dispatch_get_main_queue&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dispatch_async(dispatch_get_main_queue(), {
    self.collectionView.reloadData()
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After adding that, my UICollectionView gets updated immediately after receiving the result from the API.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/11/25/Swift-UICollectionView-Immediate-Update</link>
                <guid>http://paoloibarra.com/2014/11/25/Swift-UICollectionView-Immediate-Update</guid>
                <pubDate>2014-11-25T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Migrating your Rails App from MySQL to PostgreSQL</title>
                <description>&lt;p&gt;My friends and I had decided to use PostgreSQL instead of MySQL because we were all interested in trying it out. Since this was a relatively new project with pretty straight-forward use cases, we decided that there shouldn’t be any harm in trying it out. The next step was to proceed to migrate our application from MySQL to PostgreSQL. And it had proven to be quite simple.&lt;/p&gt;

&lt;p&gt;The first thing I did was to replace the gem in our Gemfile from &lt;code&gt;mysql2&lt;/code&gt; to &lt;code&gt;pg&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem &#39;pg&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next part was updating our &lt;code&gt;database.yml&lt;/code&gt;. I only had to update the &lt;code&gt;adapter&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; part of our YAML file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;development:
  adapter: postgresql
  encoding: unicode
  database: db_name
  pool: 5
  username: &amp;lt;username&amp;gt;
  password:
  host: localhost

test:
  adapter: postgresql
  encoding: unicode
  database: diwata_test
  pool: 5
  username: &amp;lt;username&amp;gt;
  password:
  host: localhost
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the database.yml was updated, I ran:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rake db:create:all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;… to create all the database the app needed. Subsequently, I also ran&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rake db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;… to create the necessary tables in the database.&lt;/p&gt;

&lt;p&gt;To make sure that everything was ok, I ran &lt;code&gt;rspec&lt;/code&gt; to know whether all the tests were passing. And sure enough, all the tests passed.&lt;/p&gt;

&lt;p&gt;Now, our application is using PostgreSQL.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/11/01/Migrating-Rails-App-From-MySQL-to-PostgreSQL</link>
                <guid>http://paoloibarra.com/2014/11/01/Migrating-Rails-App-From-MySQL-to-PostgreSQL</guid>
                <pubDate>2014-11-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Using Swift in an iOS Application to Upload an Image to a RESTful API</title>
                <description>&lt;p&gt;Last time, I wrote a post about how to create a &lt;a href=&quot;http://jpibarra1130.github.io/2014/09/27/Image-Upload-Using-Rails-API-And-Paperclip/&quot;&gt;RESTful API using Rails and Paperclip&lt;/a&gt;. The second part of my task is to figure out a way on how to upload an image taken from my phone’s Camera using Swift.&lt;/p&gt;

&lt;p&gt;To send the request, I used NSMutableURLRequest to handle the JSON request&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var request = NSMutableURLRequest(URL: NSURL(string: url))
request.HTTPMethod = &quot;POST&quot;
request.addValue(&quot;application/json&quot;, forHTTPHeaderField: &quot;Content-Type&quot;)
request.addValue(&quot;application/json&quot;, forHTTPHeaderField: &quot;Accept&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To prepare the HTTPBody, I had to encode the image to a Base64 string. This is done through the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var imageData = UIImagePNGRepresentation(image)
var base64String = imageData.base64EncodedStringWithOptions(NSDataBase64EncodingOptions.fromRaw(0)!) // encode the image
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After doing this, I’ve put the encoded image into a Dictionary in the appropriate parameter. I serialized it into a JSON representation which I assigned to the HTTPBody.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var params = [&quot;image&quot;:[ &quot;content_type&quot;: &quot;image/jpeg&quot;, &quot;filename&quot;:&quot;test.jpg&quot;, &quot;file_data&quot;: base64String]]
request.HTTPBody = NSJSONSerialization.dataWithJSONObject(params, options: NSJSONWritingOptions(0), error: &amp;amp;err)!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used the shared session object to create a task to send the request.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var session = NSURLSession.sharedSession()
var task = session.dataTaskWithRequest(request.toMutableURLRequest(), completionHandler: { data, response, error -&amp;gt; Void in
    var strData = NSString(data: data, encoding: NSUTF8StringEncoding)
    var err: NSError?

    // process the response
})

task.resume() // this is needed to start the task
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the request has completed, the block I passed via the completionHandler will be executed. From there, I was able to evaluate the response. So that’s how I was able to send the image taken from my phone’s camera to the server.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/10/11/Image-Upload-To-RESTful-API-Swift</link>
                <guid>http://paoloibarra.com/2014/10/11/Image-Upload-To-RESTful-API-Swift</guid>
                <pubDate>2014-10-11T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Image Upload Using Rails API and Paperclip</title>
                <description>&lt;p&gt;I am working on a mini-project with my friends and part of it requires us to make a RESTful API. We opted to use Ruby on Rails for the backend since we have a tight schedule and using this stack would simplify the development. For my first task, I need to create an endpoint which will allow me to upload an image together with the object’s properties.&lt;/p&gt;

&lt;p&gt;I used &lt;a href=&quot;https://github.com/thoughtbot/paperclip&quot;&gt;Paperclip&lt;/a&gt; to help manage the image file. I was stumped on how to accomplish this task for a while because this was the first time I’d be writing an endpoint that allowed me to upload an image. After researching for a while, I saw this &lt;a href=&quot;http://blag.7tonlnu.pl/blog/2014/01/22/uploading-images-to-a-rails-app-via-json-api/&quot;&gt;blog&lt;/a&gt; which showed me how to upload a file.&lt;/p&gt;

&lt;p&gt;The main idea is to encode the file to Base64, and set the correct attributes (content-type, filename) so we can parse it in the server-side correctly.&lt;/p&gt;

&lt;p&gt;A sample request would look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/api/v1/items/create.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Request Payload:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &quot;image&quot;:
    {
      filename: &quot;original_filename.jpg&quot;,
      content: &quot;&amp;lt;Base64Encoded data&amp;gt;&quot;,
      content_type: &quot;&amp;lt;image content type&amp;gt;&quot; # e.g. image/jpeg
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your controller should be able to process this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class API::V1::ItemsController &amp;lt; ApplicationController

  def create
    result = { status: &quot;failed&quot; }

    begin
      params[:image] = parse_image_data(params[:image]) if params[:image]
      item = Item.new
      item.image = params[:image]

      if item.save
        result[:status] = &quot;success&quot;
      end
    rescue Exception =&amp;gt; e
      Rails.logger.error &quot;#{e.message}&quot;
    end

    render json: result.to_json
  ensure
    clean_tempfile
  end

  # This part is actually taken from http://blag.7tonlnu.pl/blog/2014/01/22/uploading-images-to-a-rails-app-via-json-api. I tweaked it a bit by manually setting the tempfile&#39;s content type because somehow putting it in a hash during initialization didn&#39;t work for me.
  def parse_image_data(image_data)
    @tempfile = Tempfile.new(&#39;item_image&#39;)
    @tempfile.binmode
    @tempfile.write Base64.decode64(image_data[:content])
    @tempfile.rewind

    uploaded_file = ActionDispatch::Http::UploadedFile.new(
      tempfile: @tempfile,
      filename: image_data[:filename]
    )

   uploaded_file.content_type = image_data[:content_type]
    uploaded_file
  end

  def clean_tempfile
    if @tempfile
      @tempfile.close
      @tempfile.unlink
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So there you have it, a controller that handles image upload.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/09/27/Image-Upload-Using-Rails-API-And-Paperclip</link>
                <guid>http://paoloibarra.com/2014/09/27/Image-Upload-Using-Rails-API-And-Paperclip</guid>
                <pubDate>2014-09-27T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Java: Download Dialog for the Browser</title>
                <description>&lt;p&gt;If ever you’ve encountered this requirement where you need to make the download dialog from the browser show up when a user is downloading a file from your Java-backed website, the solution is this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;response.setContentType(&quot;text/csv&quot;);
response.setHeader(&quot;Content-Disposition&quot;, String.format(&quot;attachment; filename=\&quot;sample_file.csv\&quot;&quot;));
response.getWriter().write(&quot;This is a test file.&quot;);
response.flushBuffer();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You simply need to set the &lt;em&gt;Header&lt;/em&gt; and &lt;em&gt;Content Type&lt;/em&gt;. I was handling a bug last week, wherein the download dialog was working intermittently. After looking at the code, it was because the &lt;em&gt;Content Type&lt;/em&gt; and &lt;em&gt;Header&lt;/em&gt; were set &lt;strong&gt;AFTER&lt;/strong&gt; the response was written. Shifting the write response part after setting those two attributes fixed the issue.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/08/31/Java-Browser-Download-Dialog</link>
                <guid>http://paoloibarra.com/2014/08/31/Java-Browser-Download-Dialog</guid>
                <pubDate>2014-08-31T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Java, Spock, and PowerMock</title>
                <description>&lt;p&gt;The thing I hate about Java is that at times, it’s just so verbose. And if you’re writing tests, it gets too time-consuming. Just the number of boilerplate you need makes it a little annoying to use.&lt;/p&gt;

&lt;p&gt;I was playing around with &lt;a href=&quot;https://github.com/spockframework/spock&quot;&gt;Spock&lt;/a&gt; as a way to make test writing in Java much more fun. The problem is, the project I am currently working on is using a lot of static classes. So that’s one big hurdle I had to face.&lt;/p&gt;

&lt;p&gt;I couldn’t find a lot of references about Spock natively being able to mock a static method for a Java class. But good thing is that we could use a Java Mocking Library. I decided to choose &lt;a href=&quot;https://code.google.com/p/powermock/&quot;&gt;PowerMock&lt;/a&gt; simply because the project is already using it.&lt;/p&gt;

&lt;p&gt;It took me a while to make Spock work with PowerMock though. I think that there’s not much references out there. There were a bunch of references saying that PowerMock couldn’t be used together with Spock. Luckily, I managed to stumble upon this &lt;a href=&quot;https://github.com/kriegaex/Spock_PowerMock&quot;&gt;repository&lt;/a&gt; which allowed me to successfully use PowerMock with Spock.&lt;/p&gt;

&lt;p&gt;To use PowerMock, you need to add the following dependencies. The PowerMock :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;org.powermock&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;powermock-module-junit4&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${powermock.version}&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;

&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;org.powermock&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;powermock-module-junit4-rule&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${powermock.version}&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;

&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;org.powermock&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;powermock-classloading-xstream&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${powermock.version}&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As of writing, I used &lt;strong&gt;1.5.4&lt;/strong&gt; version of PowerMock.&lt;/p&gt;

&lt;p&gt;My final test class looks something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import org.junit.Rule
import org.mockito.Mockito
import org.powermock.api.mockito.PowerMockito
import org.powermock.core.classloader.annotations.PrepareForTest
import org.powermock.modules.junit4.rule.PowerMockRule
import spock.lang.Specification

@PrepareForTest([StaticClass.class])
public class FlightFormSpec extends Specification {

    @Rule PowerMockRule powerMockRule = new PowerMockRule();

    def &quot;When mocking static&quot;() {
        setup :
            PowerMockito.mockStatic(StaticClass.class)

        when :
            Mockito.when(StaticClass.getStaticMethod()).thenReturn(&quot;Philippines!&quot;);

        then :
            StaticClass.getStaticMethod() == &quot;Philippines!&quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I hope that this article does help other people who were stuck at trying to mock static methods using Spock.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/07/20/Java-Spock-and-PowerMock</link>
                <guid>http://paoloibarra.com/2014/07/20/Java-Spock-and-PowerMock</guid>
                <pubDate>2014-07-20T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Playing Around with Go</title>
                <description>&lt;p&gt;I’ve been interested recently with using Golang thanks to a few friends of mine who have been raving about how good it is. I’ve tried it before through their interactive console, &lt;a href=&quot;http://tour.golang.org&quot;&gt;Golang tour&lt;/a&gt;. After that, I’ve proceeded reading around the documentation. And I find the documentation quite comprehensive.&lt;/p&gt;

&lt;p&gt;Last week, I was discussing a possible project I wanted to start with my friend. I thought it would be interesting to use Go to create the API for this. Prior to starting this project, we’ve decided to play around with the languages we plan to use. I was assigned the backend component and decided to use Golang for it. I wanted to create a simple API so that I will be able to explore the following areas:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create an HTTP endpoint&lt;/li&gt;
  &lt;li&gt;Create DB migrations&lt;/li&gt;
  &lt;li&gt;Map the db to structs&lt;/li&gt;
  &lt;li&gt;Handle dependency management&lt;/li&gt;
  &lt;li&gt;Testing (which I am still figuring out as of writing)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It proved out to be quite simpler than I imagined.&lt;/p&gt;

&lt;h2 id=&quot;create-an-http-endpoint&quot;&gt;Create an HTTP endpoint&lt;/h2&gt;

&lt;p&gt;The first thing I did was to figure out a way to make it run, and see something printed out on my browser which is the first goal.&lt;/p&gt;

&lt;p&gt;To create the HTTP endpoint, I’ve decided to use &lt;a href=&quot;https://github.com/gorilla/mux&quot;&gt;gorilla-mux&lt;/a&gt;. You need to go to $GOPATH/src/github.com/user/simple-api-go. Create a file named &lt;code&gt;simple_api.go&lt;/code&gt;. Make sure to install gorilla-mux first before you run this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import (
  &quot;encoding/json&quot;
  &quot;github.com/gorilla/mux&quot;
  &quot;log&quot;
  &quot;net/http&quot;
)

func main() {
  r := mux.NewRouter()
  r.HandleFunc(&quot;/&quot;, PostsHandler).Methods(&quot;GET&quot;)

  http.Handle(&quot;/&quot;, r)

  log.Println(&quot;Server started. Listening...&quot;)
  http.ListenAndServe(&quot;:3000&quot;, nil)
}

func PostsHandler(w http.ResponseWriter, r *http.Request) {
  w.Write([]byte(&quot;hello world&quot;))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you save this, run &lt;code&gt;go build&lt;/code&gt;. This will generate an executable file &lt;code&gt;simple_api_go&lt;/code&gt; in the main folder. Simply run this, and go to &lt;code&gt;localhost:3000&lt;/code&gt;. You should be able to see ‘hello world’.&lt;/p&gt;

&lt;h2 id=&quot;create-db-migrations&quot;&gt;Create DB migrations&lt;/h2&gt;

&lt;p&gt;The next step is to see how I’ll be able to manage DB migrations in this project. I was googling around a possible library to use. I ended up using &lt;a href=&quot;https://bitbucket.org/liamstask/goose&quot;&gt;Goose&lt;/a&gt;. Once you have this installed, create a database for simple-api-go. Create &lt;code&gt;db/dbconf.yml&lt;/code&gt; in your simple-api-go and fill it in with the necessary information. I am currently using MySQL. Myd dbconf.yml looks something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;development:
  driver: mymysql
    open: tcp:localhost:3306*simple-api-go-development/user/password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create a simple migration, you need to run this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;goose create CreatePosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will generate a migration file inside &lt;code&gt;db/migrations/&lt;/code&gt;. Edit the generated migration, and add this simple script.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-- +goose Up
CREATE TABLE posts (
    id int NOT NULL,
    title text,
    body text,
    PRIMARY KEY(id)
);

-- +goose Down
DROP TABLE posts;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, run &lt;code&gt;goose up&lt;/code&gt;. This will run the script above. The database you have created should now have the the &lt;code&gt;posts&lt;/code&gt; table. Read more about goose &lt;a href=&quot;https://bitbucket.org/liamstask/goose&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;map-the-db-to-structs&quot;&gt;Map the db to structs&lt;/h2&gt;
&lt;p&gt;Now, I needed to find out a way to easily access the info from the database. To do this, I’ve decided to use &lt;a href=&quot;https://github.com/coopernurse/gorp&quot;&gt;gorp&lt;/a&gt;. First thing you need to do is update simple_api.go and create a struct Post with the gorp annotations.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type Post struct {
  Id    int    `db:&quot;id&quot;`
  Title string `db:&quot;title&quot;`
  Body  string `db:&quot;body&quot;`
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you have the struct setup, you need to create a new function which will connect to the database to retrieve the information:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// global options. available to any subcommands. This was taken from goose library
var flagPath = flag.String(&quot;path&quot;, &quot;db&quot;, &quot;folder containing db info&quot;)
var flagEnv = flag.String(&quot;env&quot;, &quot;development&quot;, &quot;which DB environment to use&quot;)

func GetPosts() []Post {

  // I&#39;ve decided to use the goose config file so that I won&#39;t have multiple db configs
  conf, err := goose.NewDBConf(*flagPath, *flagEnv)

  if err != nil {
    log.Fatal(err)
    return nil
  }

  log.Printf(&quot;Connecting to %v, %v&quot;, conf.Driver.Name, conf.Driver.OpenStr)

  db, err := sql.Open(conf.Driver.Name, conf.Driver.OpenStr)

  dbmap := &amp;amp;gorp.DbMap{Db: db, Dialect: gorp.MySQLDialect{&quot;InnoDB&quot;, &quot;UTF8&quot;}}
  defer dbmap.Db.Close()

  var posts []Post
  _, err = dbmap.Select(&amp;amp;posts, &quot;select id, title, body from posts order by id&quot;)

  if err != nil {
    log.Printf(&quot;Error: &quot;, err)
    return nil
  }

  return posts
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can read more about the gorp related functionalities &lt;a href=&quot;https://github.com/coopernurse/gorp&quot;&gt;here&lt;/a&gt;. Once you have this up and running, you just need to update your &lt;code&gt;PostsHandler&lt;/code&gt; to incorporate the function we just created.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func PostsHandler(w http.ResponseWriter, r *http.Request) {
  out, err := json.Marshal(GetPosts())

  if err != nil {
    log.Fatal(err)
    w.Write([]byte(&quot;Something bad has happened.&quot;))
    return
  }

  log.Printf(&quot;Post: %v&quot;, string(out))

  w.Write([]byte(out))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, do a &lt;code&gt;go build&lt;/code&gt; and run the generated file. If you go to &lt;code&gt;localhost:3000&lt;/code&gt; you should be able to see the json posts from your db. Please make sure to run all the necessary imports to avoid errors.&lt;/p&gt;

&lt;h2 id=&quot;handle-dependency-management&quot;&gt;Handle dependency management&lt;/h2&gt;

&lt;p&gt;For the dependency management, I used godep. You just need to install &lt;a href=&quot;https://github.com/tools/godep&quot;&gt;godep&lt;/a&gt; and run &lt;code&gt;godep save&lt;/code&gt; to generate all the existing dependencies.&lt;/p&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;p&gt;I will update this post once I actually explored enough of testing Go.&lt;/p&gt;

&lt;p&gt;If you want to see the final simple-api-go for your reference, you can clone or fork &lt;a href=&quot;https://github.com/jpibarra1130/simple-api-go&quot;&gt;simple-api-go&lt;/a&gt;.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/06/01/Playing-around-with-Go</link>
                <guid>http://paoloibarra.com/2014/06/01/Playing-around-with-Go</guid>
                <pubDate>2014-06-01T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Revisiting Git SVN</title>
                <description>&lt;p&gt;There might come a time when you’ll be assigned to a project that is still using SVN. This happened to me a few weeks ago. Because of one reason or another, the project won’t be migrated to Git in the near future. I’ve been using Git for years now, and I love how easy it is to use. Branching, merging, and working even when you don’t have a connection are just some of the things I love about Git. That is why I still want to use it.&lt;/p&gt;

&lt;p&gt;If you are in a similar situation, don’t despair! There is git-svn which you can use for this. Thanks to this &lt;a href=&quot;http://www.janosgyerik.com/practical-tips-for-using-git-with-large-subversion-repositories/&quot;&gt;source&lt;/a&gt;, I was able to set up my local running git-svn.&lt;/p&gt;

&lt;p&gt;First thing you need to do is to clone your repository. In my case, the project I wanted to clone was too big that it would probably take me more than a few hours just to clone. If you are in a similar situation, one thing you can do is to just do a shallow clone.&lt;/p&gt;

&lt;p&gt;First thing you need to know is how many revisions are there in your repository.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svn info http://your-svn-repo.com/svn/project-name/trunk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you get the latest revision number, you need to specify the start of the revision you want to clone from. For example, if your svn repo has 100000 revisions, and you want to just get the last 20000 revision then you need to pass 80000 in the &lt;code&gt;git svn clone&lt;/code&gt; command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn clone -r80000:HEAD http://your-svn-repo.com/svn/project-name/trunk project-name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will only clone the project’s trunk beginning from revision 80000 up to the latest change. This is necessary especially if your svn repository has multiple branches. If you need to only work on certain branches then you should clone only those branches.&lt;/p&gt;

&lt;p&gt;To do this, you need to update your &lt;code&gt;.git/config&lt;/code&gt; to look something like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[svn-remote &quot;svn&quot;]
    url = http://svn-repo.com/svn/projects/project
    fetch = trunk:refs/remotes/git-svn
    fetch = branches/branch-name:refs/remotes/branch-name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you have done this, you need to fetch the revisions from those branches. Again, if your repo is large, it’s better to just fetch from a certain revision up to the latest. You can do so through the &lt;code&gt;-r&lt;/code&gt; flag&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn fetch -r 80000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If this doesn’t do anything, you need to run the fetch command again without the &lt;code&gt;-r&lt;/code&gt; flag.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn fetch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This might take a (very) long time depending on how many revisions you want to fetch.&lt;/p&gt;

&lt;p&gt;To see whether you successfully fetched the branch:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should be able to see the branch you specified in the git config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;remotes/branch-name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can checkout the branch by&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout -b branch-name-local remotes/branch-name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To know whether you are in the correct branch, run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you will see which branch you are currently in. You can now start editing files, and see whether that works.&lt;/p&gt;

&lt;p&gt;You might also want to copy the ignored files over to your .gitignore&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn show-ignore &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can either commit this file or add it in &lt;code&gt;.git/info/exclude&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you have changes to commit, you need to commit these locally first&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add file/you/changed
git commit -m &quot;My first commit&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before pushing these changes in production, make sure that you have the latest revisions&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn rebase
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you get the latest changes, you can then commit it in svn through a &lt;code&gt;dcommit&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And there you have it, a working git-svn.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/04/24/Revisiting-Git-SVN</link>
                <guid>http://paoloibarra.com/2014/04/24/Revisiting-Git-SVN</guid>
                <pubDate>2014-04-24T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Retrieving Vimeo ID</title>
                <description>&lt;p&gt;I have a usecase in my side project wherein I needed to get the thumbnail for a vimeo video. Getting this is relatively easy through vimeo’s &lt;a href=&quot;http://developer.vimeo.com/apis/simple#video-request&quot;&gt;Video Request API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I think it’s trickier to extract the video ID from the vimeo URL. There are multiple valid Vimeo URLs. Based on this &lt;a href=&quot;http://stackoverflow.com/questions/10488943/easy-way-to-get-vimeo-id-from-a-vimeo-url&quot;&gt;link&lt;/a&gt;, here are a few of the valid links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://vimeo.com/12345&lt;/li&gt;
  &lt;li&gt;http://player.vimeo.com/video/12345&lt;/li&gt;
  &lt;li&gt;http://player.vimeo.com/video/12345?test=value1&lt;/li&gt;
  &lt;li&gt;http://player.vimeo.com/video/12345/?test=value1&lt;/li&gt;
  &lt;li&gt;http://vimeo.com/channels/vimeogirls/12345&lt;/li&gt;
  &lt;li&gt;http://vimeo.com/groups/shortfilms/videos/12345&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tailored this &lt;a href=&quot;https://gist.github.com/wwdboer/4943672&quot;&gt;gist&lt;/a&gt; by wwdboer in &lt;a href=&quot;https://gist.github.com/jpibarra1130/9993586&quot;&gt;Ruby&lt;/a&gt; to extract the correct id from a given vimeo URL.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def self.vimeo_id(url)
  match = url.match(/https?:\/\/(?:[\w]+\.)*vimeo\.com(?:[\/\w]*\/?)?\/(?&amp;lt;id&amp;gt;[0-9]+)[^\s]*/)
  match[:id] if match.present?
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This method will return the id if present, and &lt;code&gt;nil&lt;/code&gt; if not.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/04/05/Retrieving-Vimeo-Id</link>
                <guid>http://paoloibarra.com/2014/04/05/Retrieving-Vimeo-Id</guid>
                <pubDate>2014-04-05T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Centering Bootstrap Pagination</title>
                <description>&lt;p&gt;I was looking for a way to center the pagination on my main page. I am currently using bootstrap 3, and I have integrated it in my app using &lt;a href=&quot;https://github.com/bootstrap-ruby/will_paginate-bootstrap&quot;&gt;will_paginate-bootstrap&lt;/a&gt;. To center this, I wrapped the section for pagination into a div.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;center&quot;&amp;gt;
  &amp;lt;%= will_paginate @models, renderer: BootstrapPagination::Rails, inner_window: 1, outer_window: 1, previous_label: &quot;«&quot; , next_label: &quot;»&quot; %&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Please note that the will_paginate part will be transformed into &lt;code&gt;ul&lt;/code&gt;. I managed to center the &lt;code&gt;ul&lt;/code&gt; block which contains the page numbers by specifying the width, then setting margin to ‘0 auto’&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.center {
  width: 275px;
  margin: 0 auto;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This worked for me.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/03/14/Center-Pagination-Bootstrap</link>
                <guid>http://paoloibarra.com/2014/03/14/Center-Pagination-Bootstrap</guid>
                <pubDate>2014-03-14T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>MySQL 2 Gem Installation Error</title>
                <description>&lt;p&gt;I’ve encountered this error a few times before whenever I had a need to setup a new machine for my projects.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;An error occurred while installing mysql2 (0.3.14), and Bundler cannot continue.
Make sure that `gem install mysql2 -v &#39;0.3.14&#39;` succeeds before bundling.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Normally, specifying the MySQL lib folder during the installation is enough to solve the issue.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install mysql2 -v &#39;0.3.14&#39; -- --with-mysql-lib=/usr/lib/mysql/lib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The other week I encountered this again when I was deploying my application for the first time in my server. The solution above didn’t solve the issue because I still encountered it whenever I had to redeploy. What worked for me to permanently solve this is by installing the &lt;em&gt;libmysqlclient-dev&lt;/em&gt; package in my server.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libmysqlclient-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hopefully, I won’t have to search around google when I encounter this again to save myself (or you) a few minutes.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/01/26/MySQL-2-Gem-Installation-Error</link>
                <guid>http://paoloibarra.com/2014/01/26/MySQL-2-Gem-Installation-Error</guid>
                <pubDate>2014-01-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Thepinknotes.com is live!</title>
                <description>&lt;p&gt;It is finally live! My first ever website. There’s something absolutely wonderful in seeing your own idea go live. I have done freelancing jobs before where I had to create something from scratch. And I am working at a company right now developing different features. But I got to tell you this, seeing your own idea live gives you a different kind of high. Because you can finally say that you created something of your own.&lt;/p&gt;

&lt;p&gt;I have always wanted to create a product or an application but I somehow managed to talk myself out of doing so. Either I ended up convincing myself that my idea wasn’t good enough, or that it might be too complicated that I wasn’t ready to do it. I talked to my CEO once and he got me thinking when he said that it should be easier for me to create a product because I should know how to build stuff. I realized that my overthinking is just holding me back. If there’s something complicated that I find in the product I was thinking of, then it’s fine, I’ll manage to simplify it. If there’s a difficult bug I encounter, then I’ll do the same thing I’ve done with all other issues I have encountered - find a solution for it. At the end of the day, I realized you just have to go for it. Think of one thing you are passionate in and try to intersect it with technology.&lt;/p&gt;

&lt;p&gt;It would be great if it becomes the next big thing. If it isn’t then tough luck. But so what? What’s the worst thing that could happen? If it becomes super popular then good for you! If it doesn’t then it ends up in your portfolio and you have learned something new.&lt;/p&gt;

&lt;p&gt;Right now, I am just extremely happy that I have released my website. A website that I hope would help other people in the LGBT community. It is something I am passionate in. It’s my way of helping out my community as a gay developer.&lt;/p&gt;

&lt;p&gt;There is still a lot of things I need to do. I need to add some tracking. Add new features. Refactor some of the codes. Get content and users. But right now, I’m just extremely happy that I pushed my website to live. Seeing that page load for the first time under the domain name I chose - it’s a pretty darn cool feeling.&lt;/p&gt;

&lt;p&gt;Here’s a quote I find really inspiring. We, as developers, have the skillset to actually achieve this.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I always thought of myself as a humanities person as a kid, but I liked electronics,” he said. “Then I read something that one of
my heroes, Edwin Land of Polaroid, said about the importance of people who could stand at the intersection of humanities and
sciences, and I decided that’s what I wanted to do.”&lt;/p&gt;

  &lt;p&gt;Excerpt From: Isaacson, Walter. “Steve Jobs.”&lt;/p&gt;
&lt;/blockquote&gt;
</description>
                <link>http://paoloibarra.com/2014/01/19/The-Pink-Notes-Is-Live</link>
                <guid>http://paoloibarra.com/2014/01/19/The-Pink-Notes-Is-Live</guid>
                <pubDate>2014-01-19T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Ubuntu: Locale Issue</title>
                <description>&lt;p&gt;I was encountering a locale issue on my Ubuntu server earlier. The error looks something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unsupported locale setting
Traceback (most recent call last):
  File &quot;/usr/lib/python3/dist-packages/CommandNotFound/util.py&quot;, line 24, in crash_guard
    callback()
  File &quot;/usr/lib/command-not-found&quot;, line 69, in main
    enable_i18n()
  File &quot;/usr/lib/command-not-found&quot;, line 40, in enable_i18n
    locale.setlocale(locale.LC_ALL, &#39;&#39;)
  File &quot;/usr/lib/python3.3/locale.py&quot;, line 541, in setlocale
    return _setlocale(category, locale)
locale.Error: unsupported locale setting
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This was caused by these missing locale settings: LC_ALL and LANG. One way to solve this is by adding an export line for these variables on ~/.bash_profile or ~/.bashrc file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But because I don’t want to be doing this for all my (future) users, I had to look for a config file which would have a system-wide effect.&lt;/p&gt;

&lt;p&gt;I found out about &lt;a href=&quot;https://help.ubuntu.com/community/EnvironmentVariables#A.2BAC8-etc.2BAC8-environment&quot;&gt;/etc/environment&lt;/a&gt; which is used for system-wide environment setting. I managed to solve the issue by appending these in that file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LC_ALL=en_US.UTF-8
LANG=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;

</description>
                <link>http://paoloibarra.com/2014/01/15/Ubuntu-Locale-Issue</link>
                <guid>http://paoloibarra.com/2014/01/15/Ubuntu-Locale-Issue</guid>
                <pubDate>2014-01-15T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Securing My Cloud Server</title>
                <description>&lt;p&gt;I’m finally on the deployment stage of my app. I have been working on this application on and off for a few months now. I was hoping to deploy it on January 1 but an impromptu trip stopped me from doing so. But nevertheless, here I am and deploying it.&lt;/p&gt;

&lt;p&gt;I was thinking of using Heroku because of the ease of deployment. But I wanted to try my hand in setting up my own cloud server that was why I ended up getting my own remote server. I ended up choosing &lt;a href=&quot;http://www.simplercloud.com&quot;&gt;SimplerCloud&lt;/a&gt; as per the recommendation of a former colleague. It would make sense for me to use it since my target audience is in SEA, and because the machine is located in Singapore it will lessen the latency. I ordered the Extra Small with 1GB Ram, 20GB SSD, 1 Core which was running on Ubuntu Saucy (13.10).&lt;/p&gt;

&lt;p&gt;Once my server was up and running, my first task was to make it secure. I ran across this &lt;a href=&quot;http://robmclarty.com/blog/how-to-setup-a-production-server-for-rails-4&quot;&gt;article&lt;/a&gt; before, and decided to revisit it to help me secure my server. Here are a few steps of what I did to accomplish this.&lt;/p&gt;

&lt;p&gt;For SimplerCloud, you will need to login to the server as root@xxx.xxx.xxx.xxx supplying the generated password coming from the dashboard.&lt;/p&gt;

&lt;p&gt;The moment I was in the server, I proceeded to creating a new user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo adduser paolo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Afterwhich, I granted the new user sudo rights&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo usermod -aG sudo paolo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the user has sudo rights, I went inside the user’s home folder and copied my machine’s public key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/home/paolo/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After creating a new user, my next stop was to edit the sshd_config.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before I started editing, I created a backup of the sshd_config.&lt;/strong&gt; This is in the event that if something goes wrong then I can always revert back to the old config.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp /etc/ssh/sshd_config &amp;gt; /etc/ssh/sshd_config.bak
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After creating the backup, I started editing the file by disallowing users to directly ssh as root. I disabled this by changing &lt;em&gt;PermitRootLogin&lt;/em&gt; to &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PermitRootLogin no
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another thing I did was to change the port so that it will be harder for other people to get in my server. I changed it by modifying &lt;em&gt;Port&lt;/em&gt; to a different one other than default, e.g. 8765&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Port 8765
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another precaution I did was to to allow only certain users to access my server. This can be set by specifying the users in &lt;em&gt;AllowUsers&lt;/em&gt;. You can specify multiple users by separating each user with space.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AllowUsers paolo deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this, I enabled &lt;em&gt;RSAAuthentication&lt;/em&gt; so that only those machines with keys specified in the user’s authorized_keys file will be allowed to get in&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;RSAAuthentication yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After applying these changes, I restarted ssh by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service ssh restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Don’t exit the terminal yet.&lt;/strong&gt; To confirm whether I configured everything correctly, I decided to test it out by opening a new terminal. This is to see whether I would be able to get in using the port I specified.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -p 8765 paolo@xxx.xxx.xxx.xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since my public key was in the authorized_keys file of user &lt;em&gt;paolo&lt;/em&gt;, the server did not ask for my password anymore. Once I was in, I tried typing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo su
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Because I was able to change to the &lt;em&gt;root&lt;/em&gt; user I think I have finished the first few steps to securing my server. Now, I can proceed with actually deploying my application!&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/01/12/Securing-My-Cloud-Server</link>
                <guid>http://paoloibarra.com/2014/01/12/Securing-My-Cloud-Server</guid>
                <pubDate>2014-01-12T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Learning Ruby Through a Book</title>
                <description>&lt;p&gt;I have been working on Ruby on Rails on and off for close to a year now. And just recently, I have thought about this idea for a website and opted to use Ruby on Rails for it. Along the way, I realized that my knowledge about Ruby is still not broad enough, and quite scattered. I know how certain methods or classes act but there are still a lot of things I don’t understand about it. I decided that I wanted to learn more about the language, and really &lt;strong&gt;understand&lt;/strong&gt; it.&lt;/p&gt;

&lt;p&gt;I thought that the best way to go about it is to search for the most recently published book about Ruby, and read it. I ended up choosing &lt;a href=&quot;http://www.amazon.com/Programming-Ruby-1-9-2-0-Programmers/dp/1937785491&quot;&gt;Programming Ruby 1.9 &amp;amp; 2.0: The Pragmatic Programmers’ Guide (The Facets of Ruby)&lt;/a&gt; for this.&lt;/p&gt;

&lt;p&gt;In my opinion, this has been an effective way of learning Ruby. I have only finished a few chapters but I am able to learn new things about the language, and understand why certain features “magically” work.&lt;/p&gt;

&lt;p&gt;Kudos to the authors of the book for organising and explaining the concepts effectively.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/01/08/Learning-Ruby-Throught-a-Book</link>
                <guid>http://paoloibarra.com/2014/01/08/Learning-Ruby-Throught-a-Book</guid>
                <pubDate>2014-01-08T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>Privacy Policy and Terms of Service Source</title>
                <description>&lt;p&gt;I did not realize that creating your website wherein you intend to get contributions from people could be a little complicated. I was about to release it when I realized I don&#39;t even have a Terms of Service, nor a Privacy Policy.&lt;/p&gt;

&lt;p&gt;Where do you get those anyway? Is it something you make up? Do I need to hire a lawyer (omg) for this?&lt;/p&gt;

&lt;p&gt;After googling a while, I came across Wordpress&#39; &lt;a href=&quot;http://en.wordpress.com/tos/&quot;&gt;Terms of Service&lt;/a&gt; which they have shared with us. I also saw Automattic&#39;s &lt;a href=&quot;http://automattic.com/privacy/&quot;&gt;Privacy Policy&lt;/a&gt;. I reckon I need to tweak this more but at least, this would be a good start.&lt;/p&gt;
</description>
                <link>http://paoloibarra.com/2014/01/05/Privacy-Policy-And-Terms-of-Service-Source</link>
                <guid>http://paoloibarra.com/2014/01/05/Privacy-Policy-And-Terms-of-Service-Source</guid>
                <pubDate>2014-01-05T00:00:00+08:00</pubDate>
        </item>


</channel>
</rss>
